version: "3.3"

volumes:
  influx-data:
  grafana-data:
  pg-data:

services:
  traefik:
    image: traefik:1.7-alpine
    ports:
      - "80:80"
      - "81:8080"
    volumes:
      - ./conf/traefik.toml:/etc/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock

  influxdb:
    image: influxdb:1.7-alpine
    ports:
      - "8086:8086"
    volumes:
      - ./conf/influxdb.conf:/etc/influxdb/influxdb.conf:z
      - influx-data:/var/lib/influxdb:z
    command: -config /etc/influxdb/influxdb.conf
    labels:
      - "traefik.enable=true"
      - "traefik.backend=influxdb"
      - "traefik.frontend.rule=Host:influxdb.arig.local"
    depends_on:
      - traefik

  chronograf:
    image: chronograf:1.7-alpine
    ports:
      - "8888:8888"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=chronograf"
      - "traefik.frontend.rule=Host:chronograf.arig.local"
    depends_on:
      - influxdb

  grafana:
    image: grafana/grafana:5.4.3
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.backend=grafana"
      - "traefik.frontend.rule=Host:grafana.arig.local"
    depends_on:
      - influxdb

  pg:
    image: postgres:11-alpine
    ports:
      - "5432:5432"
    environment:
      - DEBUG=true
      - DB_USER=postgres
      - DB_PASS=postgres
    volumes:
      - pg-data:/var/lib/postgresql

  superviseur:
    image: arig/robots-supervisor:dev
    ports:
      - "0:80"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=superviseur"
      - "traefik.frontend.rule=Host:superviseur.arig.local"
    depends_on:
      - pg
      - grafana
